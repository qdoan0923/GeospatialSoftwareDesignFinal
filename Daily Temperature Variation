//This script quantifies the difference between the average daily high
//and the average daily low temperature in July 2019 at each point
//Load the daily temperature dataset
var TemperatureMasterData = ee.ImageCollection('ECMWF/ERA5/DAILY');

// Daily mean 2m air temperature
var era5_2mt = ee.ImageCollection('ECMWF/ERA5/DAILY')
                   .select('maximum_2m_air_temperature')
                   .filter(ee.Filter.date('2019-07-01', '2019-07-31'));

//Option to view the maximum temperature image collection
//print(era5_2mt);

// Daily mean 2m air temperature
var era5_2mt2 = ee.ImageCollection('ECMWF/ERA5/DAILY')
                   .select('minimum_2m_air_temperature')
                   .filter(ee.Filter.date('2019-07-01', '2019-07-31'));

//option to view the minimum temperature image collection
//print(era5_2mt2);

//Find mean daily max temperature for month of july
var monthlymaxmean = era5_2mt.reduce(ee.Reducer.mean());

//Find mean daily min temperature for month of july

var monthlyminmean = era5_2mt2.reduce(ee.Reducer.mean());

//Option to view the monthly maximum mean
//print(monthlymaxmean);

var differenceimage = monthlymaxmean.select('maximum_2m_air_temperature_mean').subtract(monthlyminmean.select('minimum_2m_air_temperature_mean'));

//read in country dataset
var countrydataset= ee.FeatureCollection("FAO/GAUL/2015/level0");

//Add map of the USA to apply a mask
///load the collection of the country boundaries
var country =ee.FeatureCollection('USDOS/LSIB/2013');

//Mask the difference image
var differencemask = differenceimage.clip(country.filter(ee.Filter.eq('cc', 'US')));
 
//Set the visualization parameters for the map
var visParams1 = {
  min: 5,
  max: 20,
  palette: [
    'f5f7e2','b7c6b5', '5b8991','124f67','011c37'
  ],
};

//Add the daily temperature variation to the map
Map.addLayer(
    differencemask, visParams1,
    'Daily Temperature Variation');

//Add the collection sites to the map
//This script illustrates the collection points
var yalepoint = ee.Geometry.Point([-72.114899 , 41.954655]);
var dartmouthpoint = ee.Geometry.Point([ -72.249659 , 43.736577]);
var smithpoint = ee.Geometry.Point([ -72.680123 , 42.447682]);

//Take point geometries and turn them into circles with 10 km radius
var yalecircle = yalepoint.buffer(10000,1);
var dartmouthcircle = dartmouthpoint.buffer(10000,1);
var smithcircle = smithpoint.buffer(10000,1);

//Turn circle geomtries into a list of features
var features = [
ee.Feature(yalecircle),
ee.Feature(dartmouthcircle),
ee.Feature(smithcircle),
];

// Create a FeatureCollection from the list and print it.
var mask2 = ee.FeatureCollection(features);

// Create an empty image into which to paint the features, cast to byte.
var empty = ee.Image().byte();

// outline the study areas
var outline = empty.paint({
  featureCollection: mask2,
  color: 1,
  width: 3
});

//Add the outlines to the map
Map.addLayer(outline, {palette: 'black'}, 'edges');

//Center the display
Map.centerObject(mask2, 7);

//Add a legend to the map
//process to add legend, from https://mygeoblog.com/2016/12/09/add-a-legend-to-to-your-gee-map/
//set position of panel
var legend = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});
 
// Create legend title
var legendTitle = ui.Label({
  value: 'Temperature Variation',
  style: {
    fontWeight: 'bold',
    fontSize: '18px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});
 
// Add the title to the panel
legend.add(legendTitle);
 
// Creates and styles 1 row of the legend.
var makeRow = function(color, name) {
 
      // Create the label that is actually the colored box.
      var colorBox = ui.Label({
        style: {
          backgroundColor: '#' + color,
          // Use padding to give the box height and width.
          padding: '8px',
          margin: '0 0 4px 0'
        }
      });
 
      // Create the label filled with the description text.
      var description = ui.Label({
        value: name,
        style: {margin: '0 0 4px 6px'}
      });
 
      // return the panel
      return ui.Panel({
        widgets: [colorBox, description],
        layout: ui.Panel.Layout.Flow('horizontal')
      });
};
 
//Palette with the colors
var palette =['f5f7e2','011c37'];
 
//name of the legend
var names = [
  'Low',
  'High'];
 
//Add color and and names
for (var i = 0; i < 2; i++) {
  legend.add(makeRow(palette[i], names[i]));
  }  
 
// add legend to map (alternatively you can also print the legend to the console)
Map.add(legend);

//get mean value of temperature difference in the Yale Circle
var meanReducer = ee.Reducer.mean();
var yaleMean = differenceimage.reduceRegion({
reducer: meanReducer, 
geometry: yalecircle, 
scale: 30,
bestEffort: true
});

//Print the result
print(yaleMean);

//Get the mean value of the temperature difference in the Smith Circle
var meanReducer = ee.Reducer.mean();
var smithMean = differenceimage.reduceRegion({
reducer: meanReducer, 
geometry: smithcircle, 
scale: 30,
bestEffort: true
});

//Print the result
print(smithMean);

//Get the mean value for the temperature difference in the Dartmouth circle
var meanReducer = ee.Reducer.mean();
var dartmouthMean = differenceimage.reduceRegion({
reducer: meanReducer, 
geometry: dartmouthcircle, 
scale: 30,
bestEffort: true
});
print(dartmouthMean);

//Filter all areas with the same or less mean daily temperature variation
//as the Smith College site
var lowvariation = differencemask.updateMask(differencemask.gt(0)).updateMask(differencemask.lt(11.23))
        // set all values with desired characteristics to 1
        .gt(0).selfMask()
        // rename the band
        .rename('lowvariation');

Map.addLayer(lowvariation, {palette:'black'}, 'Smith Equivalent');

//Filter all areas with the same or greater mean daily temperature variation
//as the Dartmouth College site
var highvariation = differencemask.updateMask(differencemask.gt(12.16))
        // set all values with desired characteristics to 1
        .gt(12.16).selfMask()
        // rename the band
        .rename('highvariation');

Map.addLayer(highvariation, {palette:'black'}, 'Dartmouth Equivalent');
