//This script assesses the seasonal variation in the regions.
//It displays the difference between the highest and lowest temperature in a pixel in a year.
//It then assess the areas of equal seasonal variability as the collection sites.

//Read in minimum temperature data.
//The data contains monthly daily temperature records from 1950 to 2005.
//Contains data projections from 2006 to 2099.
var colll = ee.ImageCollection('NASA/NEX-DCP30');
var coll= colll.select('tasmin');

//Filter data by date so the pixel limit is not exceded.
//Change dates if another year is of interest.
var col = coll.filterDate('2019-01-01', '2020-01-01');

//This script illustrates the collection points
var yalepoint = ee.Geometry.Point([-72.114899 , 41.954655]);
var dartmouthpoint = ee.Geometry.Point([ -72.249659 , 43.736577]);
var smithpoint = ee.Geometry.Point([ -72.680123 , 42.447682]);

//Take point geometries and turn them into circles with 10 km radius
var yalecircle = yalepoint.buffer(10000,1);
var dartmouthcircle = dartmouthpoint.buffer(10000,1);
var smithcircle = smithpoint.buffer(10000,1);

//Turn circle geomtries into a list of features
var features = [
ee.Feature(yalecircle),
ee.Feature(dartmouthcircle),
ee.Feature(smithcircle),
];

// Create a FeatureCollection from the list and print it.
var mask = ee.FeatureCollection(features);

// Reduce the image to get a one-band minimum value image.
var minValue = col.reduce(ee.Reducer.min());

//Option to add the layer to the map
//Map.addLayer(minValue, {min: 230, max: 320}, 'Min value image');

//Read in maximum temperature data
var coll2 = colll.select('tasmax');

//Filter data by date so the pixel limit is not exceded
//This date can be changes for another year of interest
var col2 = coll2.filterDate('2019-01-01', '2020-01-01');

// Reduce the image to get a one-band maximum value image.
var maxValue = col2.reduce(ee.Reducer.max());

//Option to add the max value image to the map
//Map.addLayer(maxValue, {min: 230, max: 320}, 'Max value image');

// Compute temp difference
var difference = maxValue.subtract(minValue);

// Set parameters for visualization layer
var visParams1 = {
  min: 35,
  max: 55,
  palette: [
    'f5f7e2','b7c6b5', '5b8991','124f67','011c37'
  ],
};

// Add the layer to the map
Map.addLayer(difference, visParams1, 'difference image');

// Update the composite mask with the water mask.
var visParams = {
  min: 35,
  max: 55,
  palette: [
    'f5f7e2','b7c6b5', '5b8991','124f67','011c37'
  ],
};

//Add the masked image to the map
var maskedComposite = difference.clip(mask);

// Add the collection areas to the map as empty circles.
// Paint the edges with different colors, display.
// Create an empty image into which to paint the features, cast to byte.
var empty = ee.Image().byte();

// outline the study areas
var outline = empty.paint({
  featureCollection: mask,
  color: 1,
  width: 3
});
Map.addLayer(outline, {palette: 'black'}, 'edges');

//Map.centerObject(mask);
//process to add legend, from https://mygeoblog.com/2016/12/09/add-a-legend-to-to-your-gee-map/
// set position of panel
var legend = ui.Panel({
  style: {
    position: 'bottom-left',
    padding: '8px 15px'
  }
});
 
// Create legend title
var legendTitle = ui.Label({
  value: 'Temperature Variation',
  style: {
    fontWeight: 'bold',
    fontSize: '18px',
    margin: '0 0 4px 0',
    padding: '0'
    }
});
 
// Add the title to the panel
legend.add(legendTitle);
 
// Creates and styles 1 row of the legend.
var makeRow = function(color, name) {
 
      // Create the label that is the colored square box.
      var colorBox = ui.Label({
        style: {
          backgroundColor: '#' + color,
          // Use padding to give the box height and width.
          padding: '8px',
          margin: '0 0 4px 0'
        }
      });
 
      // Create the label filled with the description text.
      var description = ui.Label({
        value: name,
        style: {margin: '0 0 4px 6px'}
      });
 
      // return the panel
      return ui.Panel({
        widgets: [colorBox, description],
        layout: ui.Panel.Layout.Flow('horizontal')
      });
};
 
//  Define the palette for the colors
var palette =['f5f7e2','011c37'];
 
// Define the name of the colors for the legend
var names = [
  'Low',
  'High'];
 
// Add color and and names
for (var i = 0; i < 2; i++) {
  legend.add(makeRow(palette[i], names[i]));
  }  
 
// Add legend to map (alternatively you can also print the legend to the console)
Map.add(legend);


//var yalemask = yalecircle.geometry();

//Get mean value of seasonal variation in the Yale collection area
//
var meanReducer = ee.Reducer.mean();
var yaleMean = difference.reduceRegion({
reducer: meanReducer, 
geometry: yalecircle, 
scale: 30,
bestEffort: true
});

print(yaleMean);

//Find the mean seasonal variation value in the Smith collection region

var meanReducer = ee.Reducer.mean();
var smithMean = difference.reduceRegion({
reducer: meanReducer, 
geometry: smithcircle, 
scale: 30,
bestEffort: true
});
print(smithMean);

//Find the mean seasonal variation value in the Dartmouth collection site
var meanReducer = ee.Reducer.mean();
var dartmouthMean = difference.reduceRegion({
reducer: meanReducer, 
geometry: dartmouthcircle, 
scale: 30,
bestEffort: true
});
print(dartmouthMean);

//Filter all areas with the same or less seasonal temperature variation
//as the Smith College site
//Inspired by
//https://gis.stackexchange.com/questions/371489/applying-less-than-and-greater-than-threshold-in-image-segmentation-in-google-ea
var lowvariation = difference.updateMask(difference.gt(0)).updateMask(difference.lt(50.14))
        // set all values with desired characteristics to 1
        .gt(0).selfMask()
        // rename the band
        .rename('lowvariation');

Map.addLayer(lowvariation, {palette: 'black'}, 'low variation');

//Create a function that applies a binary value to the image
//Pixels with a value greater than 53.49 are assigned a value of one
//Pixels with a value less than 53.49 are assigned a value of zero

var highvariation = difference.updateMask(difference.gt(53.49))
        // set all values with desired characteristics to 1
        .gt(53.49).selfMask()
        // rename the band
        .rename('highvariation');
        
//Add layer to the map displaying only the areas with seasonal 
//variation values greater than the northernmost collection site
Map.addLayer(highvariation, {palette: 'black'}, 'high variation');
Map.centerObject(mask,7);
